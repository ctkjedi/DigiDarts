<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Digi Darts</title>
    <style>
        body {
            background: url('_gfx/bg.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: 'Arial', sans-serif;
            color: #fff;
            text-align: center;
            margin: 0;
            padding: 0;
        }

        .container {
            background-color: rgba(0, 0, 0, 0.6);
            padding: 20px;
            border-radius: 10px;
            margin: 50px auto;
            width: 80%;
            max-width: 600px;
        }

        h1 {
            font-size: 2.5em;
            margin-bottom: 20px;
        }

        .scoreboard {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .player {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 5px;
        }

        .turn {
            font-weight: bold;
            color: #ff0;
        }

        .alert {
            background-color: #ff5555;
            padding: 10px;
            margin-top: 20px;
            border-radius: 5px;
        }

        .controls {
            margin-top: 20px;
        }
		
		.bigMsg {
			margin-top: 15px;
			color: #66ff00;
			font-weight: bold;
			text-align: center;
			display: inline-block;
            font-size: 52px;
		}

        .controls button {
            background-color: #008CBA;
            border: none;
            color: white;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 4px 2px;
            border-radius: 5px;
            cursor: pointer;
        }

        .controls button:hover {
            background-color: #005f73;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Digi Darts</h1>
        <div class="scoreboard" id="scoreboard">
            <div class="player" id="player1">
                <span>Player 1</span>
                <span class="score">301</span>
            </div>
            <div class="player turn" id="player2">
                <span>Player 2</span>
                <span class="score">301</span>
            </div>
            <div class="player" id="player3">
                <span>Player 3</span>
                <span class="score">301</span>
            </div>
            <div class="player" id="player4">
                <span>Player 4</span>
                <span class="score">301</span>
            </div>
            <div class="player" id="player5">
                <span>Player 5</span>
                <span class="score">301</span>
            </div>
            <div class="player" id="player6">
                <span>Player 6</span>
                <span class="score">301</span>
            </div>
        </div>
        <div class="alert" id="alert">
            Press the button to begin.
        </div>
        <div class="controls">
            <button onclick="newGame()">New Game</button>
            <button onclick="nextPlayer()">Next Player</button>
            <button onclick="addPlayer()">Add Player</button>
            <button onclick="removePlayer()">Remove Player</button>
			<button onclick="simThrow()">simThrow</button>
			<button onclick="storeScores()">store scores</button>
        </div>
    </div>
	<div class="bigMsg">Let's Play!</div>
	    <script src="https://cdn.socket.io/4.0.0/socket.io.min.js"></script>

    <script>
	const socket = io();
	
	function updateScores(players) {
		players.forEach((player, index) => {
			const playerDiv = document.querySelector(`#player${index + 1}`);
			if (player) {
				playerDiv.style.display = 'flex';
				playerDiv.querySelector('.score').textContent = player.score;
				if (player.isTurn) {
					playerDiv.classList.add('turn');
				} else {
					playerDiv.classList.remove('turn');
				}
			} else {
				playerDiv.style.display = 'none';
			}
		});
	}

	function newGame() {
		socket.emit('newGame');
	}

	function addPlayer() {
		socket.emit('addPlayer');
	}

	function removePlayer() {
		socket.emit('removePlayer');
	}

	function simThrow() {
		const score = Math.floor(Math.random() * 60) + 1; // Simulate a throw score between 1 and 60
		socket.emit('throw', score);
	}

	socket.on('gameState', (gameState) => {
		updateScores(gameState.players);
	});
	
	// Initial setup
    socket.emit('getGameState');
		
	function storeScores(){
		const gameData = [
			{
				game: Date.now(),
				date: '2024-06-17',
				players: [
					{ player: 'John', score: 1500, result: 'win' },
					{ player: 'Jane', score: 1200, result: 'loss' },
					{ player: 'Doe', score: 1200, result: 'loss' },
				]
			},
		];
		socket.emit('storeScores',gameData);
		//console.log(JSON.stringify(gameData));
	}
	
	socket.on('scoreUpdate', data => {
		scores[data.player - 1] -= data.score;
		if (scores[data.player - 1] < 0) scores[data.player - 1] = 0;
		updateScores();
	});
	
	socket.on('alertUpdate', data => {
		const alertDiv = document.getElementById("alert");
		alertDiv.textContent = data;
	});
	
	socket.on('bigMsgUpdate', data => {
		const bigMsgDiv = document.getElementById("bigMsg");
		bigMsgDiv.textContent = data;
	});
	
	function updateAlert(thisMessage){
		socket.emit('message', thisMessage);
	}
	
	function updateBigMsg(thisMessage){
		socket.emit('bigMsg', thisMessage);
	}

    </script>
	

</body>
</html>
